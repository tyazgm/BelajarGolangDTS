{
    "swagger": "2.0",
    "info": {
        "description": "Documentation of Books API",
        "title": "Books API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/books": {
            "get": {
                "description": "get all book at database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "get all book",
                "responses": {}
            },
            "post": {
                "description": "add book to the database",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "add book",
                "parameters": [
                    {
                        "description": "data is mandatory",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/books/{bookID}": {
            "get": {
                "description": "get selected book from database by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "get book by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bookID you want to retrieve",
                        "name": "bookID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            },
            "put": {
                "description": "update book choosed by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "update book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bookID you want to update",
                        "name": "bookID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "data is mandatory",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Book"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "delete book by given ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Books"
                ],
                "summary": "delete book",
                "parameters": [
                    {
                        "type": "string",
                        "description": "bookID you want to delete",
                        "name": "bookID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "model.Book": {
            "type": "object",
            "properties": {
                "author_id": {
                    "type": "integer"
                },
                "book_id": {
                    "type": "string"
                },
                "price": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                }
            }
        }
    }
}